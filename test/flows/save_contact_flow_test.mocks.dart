// Mocks generated by Mockito 5.3.2 from annotations
// in my_app/test/flows/save_contact_flow_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:my_app/database/dao/contacts_dao.dart' as _i2;
import 'package:my_app/src/features/transferencies/models/transferency_model.dart'
    as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [ContactDAO].
///
/// See the documentation for Mockito's code generation for more information.
class MockContactDAO extends _i1.Mock implements _i2.ContactDAO {
  MockContactDAO() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<int> insertDataBase(_i4.Transferency? contact) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertDataBase,
          [contact],
        ),
        returnValue: _i3.Future<int>.value(0),
      ) as _i3.Future<int>);
  @override
  _i3.Future<List<_i4.Transferency>> getAll() => (super.noSuchMethod(
        Invocation.method(
          #getAll,
          [],
        ),
        returnValue:
            _i3.Future<List<_i4.Transferency>>.value(<_i4.Transferency>[]),
      ) as _i3.Future<List<_i4.Transferency>>);
  @override
  _i3.Future<int> deleteByObject(_i4.Transferency? contact) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteByObject,
          [contact],
        ),
        returnValue: _i3.Future<int>.value(0),
      ) as _i3.Future<int>);
  @override
  List<_i4.Transferency> toList(List<Map<String, dynamic>>? contacts) =>
      (super.noSuchMethod(
        Invocation.method(
          #toList,
          [contacts],
        ),
        returnValue: <_i4.Transferency>[],
      ) as List<_i4.Transferency>);
  @override
  Map<String, dynamic> toMap(_i4.Transferency? contact) => (super.noSuchMethod(
        Invocation.method(
          #toMap,
          [contact],
        ),
        returnValue: <String, dynamic>{},
      ) as Map<String, dynamic>);
}
