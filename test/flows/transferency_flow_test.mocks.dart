// Mocks generated by Mockito 5.3.2 from annotations
// in my_app/test/flows/transferency_flow_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:http/http.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:my_app/database/dao/contacts_dao.dart' as _i3;
import 'package:my_app/http/http_client.dart' as _i6;
import 'package:my_app/src/features/transaction_feed/models/transaction_model.dart'
    as _i7;
import 'package:my_app/src/features/transferencies/models/transferency_model.dart'
    as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeUri_0 extends _i1.SmartFake implements Uri {
  _FakeUri_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeClient_1 extends _i1.SmartFake implements _i2.Client {
  _FakeClient_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ContactDAO].
///
/// See the documentation for Mockito's code generation for more information.
class MockContactDAO extends _i1.Mock implements _i3.ContactDAO {
  MockContactDAO() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<int> insertDataBase(_i5.Transferency? contact) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertDataBase,
          [contact],
        ),
        returnValue: _i4.Future<int>.value(0),
      ) as _i4.Future<int>);
  @override
  _i4.Future<List<_i5.Transferency>> getAll() => (super.noSuchMethod(
        Invocation.method(
          #getAll,
          [],
        ),
        returnValue:
            _i4.Future<List<_i5.Transferency>>.value(<_i5.Transferency>[]),
      ) as _i4.Future<List<_i5.Transferency>>);
  @override
  _i4.Future<int> deleteByObject(_i5.Transferency? contact) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteByObject,
          [contact],
        ),
        returnValue: _i4.Future<int>.value(0),
      ) as _i4.Future<int>);
  @override
  List<_i5.Transferency> toList(List<Map<String, dynamic>>? contacts) =>
      (super.noSuchMethod(
        Invocation.method(
          #toList,
          [contacts],
        ),
        returnValue: <_i5.Transferency>[],
      ) as List<_i5.Transferency>);
  @override
  Map<String, dynamic> toMap(_i5.Transferency? contact) => (super.noSuchMethod(
        Invocation.method(
          #toMap,
          [contact],
        ),
        returnValue: <String, dynamic>{},
      ) as Map<String, dynamic>);
}

/// A class which mocks [TransactionWebClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockTransactionWebClient extends _i1.Mock
    implements _i6.TransactionWebClient {
  MockTransactionWebClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  Uri get endpoint => (super.noSuchMethod(
        Invocation.getter(#endpoint),
        returnValue: _FakeUri_0(
          this,
          Invocation.getter(#endpoint),
        ),
      ) as Uri);
  @override
  _i2.Client get client => (super.noSuchMethod(
        Invocation.getter(#client),
        returnValue: _FakeClient_1(
          this,
          Invocation.getter(#client),
        ),
      ) as _i2.Client);
  @override
  Map<int, String> get mapCodeMessage => (super.noSuchMethod(
        Invocation.getter(#mapCodeMessage),
        returnValue: <int, String>{},
      ) as Map<int, String>);
  @override
  set mapCodeMessage(Map<int, String>? _mapCodeMessage) => super.noSuchMethod(
        Invocation.setter(
          #mapCodeMessage,
          _mapCodeMessage,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.Future<List<_i7.Transaction>> getAll() => (super.noSuchMethod(
        Invocation.method(
          #getAll,
          [],
        ),
        returnValue:
            _i4.Future<List<_i7.Transaction>>.value(<_i7.Transaction>[]),
      ) as _i4.Future<List<_i7.Transaction>>);
  @override
  _i4.Future<_i7.Transaction?> postTransaction(
    _i7.Transaction? transaction,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #postTransaction,
          [
            transaction,
            password,
          ],
        ),
        returnValue: _i4.Future<_i7.Transaction?>.value(),
      ) as _i4.Future<_i7.Transaction?>);
}
